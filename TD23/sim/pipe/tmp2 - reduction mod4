#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len words to dst.
# Return the number of positive words (>0) contained in src.
#
# Include your name and ID here.
#
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
# %rdi = src, %rsi = dst, %rdx = len
ncopy:

##################################################################
# You can modify this portion
	# Loop header
	xorq %rax,%rax		# count = 0;
	iaddq $-1,%rdx		# len < 0?
	jg Loop2		# if so, goto Done:
	jge Last1
	jmp Done

Do2:
	mrmovq (%rdi), %r10		# read val from src...
	mrmovq 8(%rdi), %r11	# read val from src...
	iaddq $16, %rdi		# src++
	rmmovq %r10, (%rsi)	# ...and store it to dst
	rmmovq %r11, (%rsi)	# ...and store it to dst
	iaddq $16, %rsi		# dst++
	andq %r10, %r10		# val <= 0?
	jle NPos2_1		# if so, goto Npos:
	iaddq $1, %rax		# count++
Npos2_1:
	andq %r11, %r11		# val <= 0?
	jle NPos2_2		# if so, goto Npos:
	iaddq $1, %rax		# count++
Npos2_2:
	jmp Loop4

Do1:
	mrmovq (%rdi), %r10	# read val from src...
	iaddq $8, %rdi		# src++
	rmmovq %r10, (%rsi)	# ...and store it to dst
	iaddq $8, %rsi		# dst++
	andq %r10, %r10		# val <= 0?
	jle Loop4		# if so, goto Npos:
	iaddq $1, %rax		# count++
	jmp Loop4

Loop4: #We know that we have at least 4 more addresses to read
	mrmovq (%rdi), %r10	# read val from src...
 	mrmovq 8(%rdi), %r11	# read val from src...
 	mrmovq 16(%rdi), %r12	# read val from src...
 	mrmovq 24(%rdi), %r13	# read val from src...
	iaddq $16, %rdi		# src++
	rmmovq %r10, (%rsi)	# ...and store it to dst
	rmmovq %r11, 8(%rsi)	# ...and store it to dst
	iaddq $16, %rsi		# dst++
	andq %r10, %r10		# val <= 0?
	jle Npos1		# if so, goto Npos:
	iaddq $1, %rax		# count++
Npos1:
	andq %r11, %r11		# val <= 0?
	jle Npos2		# if so, goto Npos:
	iaddq $1, %rax		# count++
Npos2:
	andq %r12, %r12		# val <= 0?
	jle Npos3		# if so, goto Npos:
	iaddq $1, %rax		# count++
Npos3:
	andq %r13, %r13		# val <= 0?
	jle Npos4		# if so, goto Npos:
	iaddq $1, %rax		# count++
Npos4:	
	iaddq $-4, %rdx		# len--
	jg Loop2			# if so, goto Loop:
		
##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
