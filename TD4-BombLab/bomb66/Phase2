disas phase_2

   0x0000000000400efc <+0>:     push   %rbp		#rdi contains input
   0x0000000000400efd <+1>:     push   %rbx
   0x0000000000400efe <+2>:     sub    $0x28,%rsp  #sub 5*8 
   0x0000000000400f02 <+6>:     mov    %rsp,%rsi   #rsi contains stack p
   0x0000000000400f05 <+9>:     callq  0x40157a <read_six_numbers>
   0x0000000000400f0a <+14>:    cmpl   $0x0,(%rsp)
   0x0000000000400f0e <+18>:    jne    0x400f17 <phase_2+27>
   0x0000000000400f10 <+20>:    cmpl   $0x1,0x4(%rsp)
   0x0000000000400f15 <+25>:    je     0x400f38 <phase_2+60>
   0x0000000000400f17 <+27>:    callq  0x401544 <explode_bomb>
   0x0000000000400f1c <+32>:    jmp    0x400f38 <phase_2+60>
   0x0000000000400f1e <+34>:    mov    -0x8(%rbx),%eax
   0x0000000000400f21 <+37>:    add    -0x4(%rbx),%eax
   0x0000000000400f24 <+40>:    cmp    %eax,(%rbx)
---Type <return> to continue, or q <return> to quit---
   0x0000000000400f26 <+42>:    je     0x400f2d <phase_2+49>
   0x0000000000400f28 <+44>:    callq  0x401544 <explode_bomb>
   0x0000000000400f2d <+49>:    add    $0x4,%rbx
   0x0000000000400f31 <+53>:    cmp    %rbp,%rbx
   0x0000000000400f34 <+56>:    jne    0x400f1e <phase_2+34>
   0x0000000000400f36 <+58>:    jmp    0x400f44 <phase_2+72>
   0x0000000000400f38 <+60>:    lea    0x8(%rsp),%rbx
   0x0000000000400f3d <+65>:    lea    0x18(%rsp),%rbp
   0x0000000000400f42 <+70>:    jmp    0x400f1e <phase_2+34>
   0x0000000000400f44 <+72>:    add    $0x28,%rsp
   0x0000000000400f48 <+76>:    pop    %rbx
   0x0000000000400f49 <+77>:    pop    %rbp
   0x0000000000400f4a <+78>:    retq

Dump of assembler code for function read_six_numbers:
   0x000000000040157a <+0>:     sub    $0x18,%rsp
   0x000000000040157e <+4>:     mov    %rsi,%rdx
   0x0000000000401581 <+7>:     lea    0x4(%rsi),%rcx
   # RCX contains rsi+4
   0x0000000000401585 <+11>:    lea    0x14(%rsi),%rax
   # RCX contains rsi+20
   0x0000000000401589 <+15>:    mov    %rax,0x8(%rsp)
   0x000000000040158e <+20>:    lea    0x10(%rsi),%rax
   0x0000000000401592 <+24>:    mov    %rax,(%rsp)
   0x0000000000401596 <+28>:    lea    0xc(%rsi),%r9
   0x000000000040159a <+32>:    lea    0x8(%rsi),%r8
   0x000000000040159e <+36>:    mov    $0x4027c1,%esi
   0x00000000004015a3 <+41>:    mov    $0x0,%eax
   0x00000000004015a8 <+46>:    callq  0x400c10 <__isoc99_sscanf@plt>
   0x00000000004015ad <+51>:    cmp    $0x5,%eax
   0x00000000004015b0 <+54>:    jg     0x4015b7 <read_six_numbers+61>
---Type <return> to continue, or q <return> to quit---
   0x00000000004015b2 <+56>:    callq  0x401544 <explode_bomb>
   0x00000000004015b7 <+61>:    add    $0x18,%rsp
   0x00000000004015bb <+65>:    retq
End of assembler dump.




0x7fffffffde36: 0x0f0a0000	0x00000040	0x00020000	0x00030000
0x7fffffffde46: 0x00040000	0x00050000	0x00060000	0x00070000
0x7fffffffde56: 0x14970000	0x00000040	0xdf680000	0x7fffffff
0x7fffffffde66: 0xdf680000	0x7fffffff	0x00000000	0x00000000
0x7fffffffde76: 0x0e5e0000	0x00000040	0x00000000	0x00000000
0x7fffffffde86: 0x04450000	0x7ffff7a3	0x00000000	0x00200000
0x7fffffffde96: 0xdf680000	0x7fffffff	0x00000000	0x00020000
0x7fffffffdea6: 0x0dad0000	0x00000040


